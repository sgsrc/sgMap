/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sgsrc.map.jni;

public class GridSampleDimension extends SampleDimension {
  private long swigCPtr;

  protected GridSampleDimension(long cPtr, boolean cMemoryOwn) {
    super(jniJNI.GridSampleDimension_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GridSampleDimension obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  private Object parentReference;

  protected static long getCPtrAndDisown(GridSampleDimension obj) {
    if (obj != null)
    {
        obj.swigCMemOwn= false;
        obj.parentReference = null;
    }
    return getCPtr(obj);
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(Object reference) {
    parentReference = reference;
  }

  public boolean equals(Object obj) {
    boolean equal = false;
    if (obj instanceof GridSampleDimension)
      equal = (((GridSampleDimension)obj).swigCPtr == this.swigCPtr);
    return equal;
  }

  public int hashCode() {
     return (int)swigCPtr;
  }


  public int GetNumRow() {
    return jniJNI.GridSampleDimension_GetNumRow(swigCPtr, this);
  }

  public int GetNumColumn() {
    return jniJNI.GridSampleDimension_GetNumColumn(swigCPtr, this);
  }

  public GridCoverage GetGridCoverage() {
    long cPtr = jniJNI.GridSampleDimension_GetGridCoverage(swigCPtr, this);
    return (cPtr == 0) ? null : new GridCoverage(cPtr, false);
  }

  public int GetSampleDimensionType() {
    return jniJNI.GridSampleDimension_GetSampleDimensionType(swigCPtr, this);
  }

  public int GetColorInterpretation() {
    return jniJNI.GridSampleDimension_GetColorInterpretation(swigCPtr, this);
  }

  public int SetColorInterpretation(int crInterp) {
    return jniJNI.GridSampleDimension_SetColorInterpretation(swigCPtr, this, crInterp);
  }

  public ColorModel GetColorTable() {
    long cPtr = jniJNI.GridSampleDimension_GetColorTable(swigCPtr, this);
    return (cPtr == 0) ? null : new ColorModel(cPtr, false);
  }

  public int SetColorTable(ColorModel crModel) {
    return jniJNI.GridSampleDimension_SetColorTable(swigCPtr, this, ColorModel.getCPtr(crModel), crModel);
  }

  public boolean HasArbitraryOverviews() {
    return jniJNI.GridSampleDimension_HasArbitraryOverviews(swigCPtr, this);
  }

  public int GetNumOverviews() {
    return jniJNI.GridSampleDimension_GetNumOverviews(swigCPtr, this);
  }

  public GridSampleDimension GetOverview(int index) {
    long cPtr = jniJNI.GridSampleDimension_GetOverview(swigCPtr, this, index);
    return (cPtr == 0) ? null : new GridSampleDimension(cPtr, false);
  }

  public double GetNoDataValue() {
    return jniJNI.GridSampleDimension_GetNoDataValue(swigCPtr, this);
  }

  public int SetNoDataValue(double nodata) {
    return jniJNI.GridSampleDimension_SetNoDataValue(swigCPtr, this, nodata);
  }

  public java.util.Vector GetCategoryNames() {
    return jniJNI.GridSampleDimension_GetCategoryNames(swigCPtr, this);
  }

  public int SetCategoryNames(java.util.Vector name) {
    return jniJNI.GridSampleDimension_SetCategoryNames(swigCPtr, this, name);
  }

  public double GetMinimumValue() {
    return jniJNI.GridSampleDimension_GetMinimumValue(swigCPtr, this);
  }

  public double GetMaximumValue() {
    return jniJNI.GridSampleDimension_GetMaximumValue(swigCPtr, this);
  }

  public int GetStatistics(SWIGTYPE_p_double min, SWIGTYPE_p_double max, SWIGTYPE_p_double mean, SWIGTYPE_p_double stddev) {
    return jniJNI.GridSampleDimension_GetStatistics(swigCPtr, this, SWIGTYPE_p_double.getCPtr(min), SWIGTYPE_p_double.getCPtr(max), SWIGTYPE_p_double.getCPtr(mean), SWIGTYPE_p_double.getCPtr(stddev));
  }

  public int SetStatistics(double min, double max, double mean, double stddev) {
    return jniJNI.GridSampleDimension_SetStatistics(swigCPtr, this, min, max, mean, stddev);
  }

  public String GetUnits() {
    return jniJNI.GridSampleDimension_GetUnits(swigCPtr, this);
  }

  public void SetUnits(String units) {
    jniJNI.GridSampleDimension_SetUnits(swigCPtr, this, units);
  }

  public double GetOffset() {
    return jniJNI.GridSampleDimension_GetOffset(swigCPtr, this);
  }

  public int SetOffset(double offset) {
    return jniJNI.GridSampleDimension_SetOffset(swigCPtr, this, offset);
  }

  public double GetScale() {
    return jniJNI.GridSampleDimension_GetScale(swigCPtr, this);
  }

  public int SetScale(double scale) {
    return jniJNI.GridSampleDimension_SetScale(swigCPtr, this, scale);
  }

  public double GetValue(int x, int y) {
    return jniJNI.GridSampleDimension_GetValue(swigCPtr, this, x, y);
  }

  public int SetValue(int x, int y, double value) {
    return jniJNI.GridSampleDimension_SetValue(swigCPtr, this, x, y, value);
  }

  public double GetValueFromCoordinate(double x, double y) {
    return jniJNI.GridSampleDimension_GetValueFromCoordinate(swigCPtr, this, x, y);
  }

  public int GetStatisticsInBoundary(SWIGTYPE_p_OGRGeometryH hRangeGeom, SWIGTYPE_p_int pSampleNum, SWIGTYPE_p_double pdfMin, SWIGTYPE_p_double pdfMax, SWIGTYPE_p_double pdfMean, SWIGTYPE_p_double pdfStdDev, SWIGTYPE_p_int panHistogram, SWIGTYPE_p_OGRParametersH hParams) {
    return jniJNI.GridSampleDimension_GetStatisticsInBoundary(swigCPtr, this, SWIGTYPE_p_OGRGeometryH.getCPtr(hRangeGeom), SWIGTYPE_p_int.getCPtr(pSampleNum), SWIGTYPE_p_double.getCPtr(pdfMin), SWIGTYPE_p_double.getCPtr(pdfMax), SWIGTYPE_p_double.getCPtr(pdfMean), SWIGTYPE_p_double.getCPtr(pdfStdDev), SWIGTYPE_p_int.getCPtr(panHistogram), SWIGTYPE_p_OGRParametersH.getCPtr(hParams));
  }

}
