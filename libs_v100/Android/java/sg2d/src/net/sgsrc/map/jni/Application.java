/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sgsrc.map.jni;

public class Application extends Widget {
  private long swigCPtr;

  protected Application(long cPtr, boolean cMemoryOwn) {
    super(jniJNI.Application_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Application obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  private Object parentReference;

  protected static long getCPtrAndDisown(Application obj) {
    if (obj != null)
    {
        obj.swigCMemOwn= false;
        obj.parentReference = null;
    }
    return getCPtr(obj);
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(Object reference) {
    parentReference = reference;
  }

  public boolean equals(Object obj) {
    boolean equal = false;
    if (obj instanceof Application)
      equal = (((Application)obj).swigCPtr == this.swigCPtr);
    return equal;
  }

  public int hashCode() {
     return (int)swigCPtr;
  }


  public boolean GetDisplayMenuBar() {
    return jniJNI.Application_GetDisplayMenuBar(swigCPtr, this);
  }

  public void SetDisplayMenuBar(boolean bVal) {
    jniJNI.Application_SetDisplayMenuBar(swigCPtr, this, bVal);
  }

  public void SetDisplayToolBar(boolean bVal) {
    jniJNI.Application_SetDisplayToolBar(swigCPtr, this, bVal);
  }

  public boolean GetDisplayStatusBar() {
    return jniJNI.Application_GetDisplayStatusBar(swigCPtr, this);
  }

  public void SetDisplayStatusBar(boolean bVal) {
    jniJNI.Application_SetDisplayStatusBar(swigCPtr, this, bVal);
  }

  public boolean GetDisplayToolBarByType(int eType) {
    return jniJNI.Application_GetDisplayToolBarByType(swigCPtr, this, eType);
  }

  public void SetDisplayToolBarByType(int eType, boolean bVal) {
    jniJNI.Application_SetDisplayToolBarByType(swigCPtr, this, eType, bVal);
  }

  public void DeleteToolBarByType(int eType) {
    jniJNI.Application_DeleteToolBarByType(swigCPtr, this, eType);
  }

  public FeatureCanvas GetFeatureCanvas() {
    long cPtr = jniJNI.Application_GetFeatureCanvas(swigCPtr, this);
    return (cPtr == 0) ? null : new FeatureCanvas(cPtr, false);
  }

  public CommonFactory GetCommonFactory() {
    long cPtr = jniJNI.Application_GetCommonFactory(swigCPtr, this);
    return (cPtr == 0) ? null : new CommonFactory(cPtr, false);
  }

  public void AddDockWidget(int eArea, Widget poWidget) {
    jniJNI.Application_AddDockWidget(swigCPtr, this, eArea, Widget.getCPtr(poWidget), poWidget);
  }

  public void TabifyDockWidget(Widget poFirst, Widget poSecond) {
    jniJNI.Application_TabifyDockWidget(swigCPtr, this, Widget.getCPtr(poFirst), poFirst, Widget.getCPtr(poSecond), poSecond);
  }

  public String GetTitle() {
    return jniJNI.Application_GetTitle(swigCPtr, this);
  }

  public PrintLayoutWidget ShowPrintLayoutWidget(String pszTitle, Canvas pCanvas) {
    long cPtr = jniJNI.Application_ShowPrintLayoutWidget(swigCPtr, this, pszTitle, Canvas.getCPtr(pCanvas), pCanvas);
    return (cPtr == 0) ? null : new PrintLayoutWidget(cPtr, false);
  }

  public void AddMenu(String pszKeyName, String pszName, String pszParentMenuKeyName) {
    jniJNI.Application_AddMenu(swigCPtr, this, pszKeyName, pszName, pszParentMenuKeyName);
  }

  public void AddAction(String pszKeyName, String pszName, String pszMenuKeyName, String pszIconFileName, String pszClickFunc) {
    jniJNI.Application_AddAction(swigCPtr, this, pszKeyName, pszName, pszMenuKeyName, pszIconFileName, pszClickFunc);
  }

  public void RunScript(String pszCommand, boolean bDebug) {
    jniJNI.Application_RunScript(swigCPtr, this, pszCommand, bDebug);
  }

}
