/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sgsrc.map.jni;

public class FeatureCanvasEvent extends Event {
  private long swigCPtr;

  protected FeatureCanvasEvent(long cPtr, boolean cMemoryOwn) {
    super(jniJNI.FeatureCanvasEvent_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FeatureCanvasEvent obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jniJNI.delete_FeatureCanvasEvent(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    jniJNI.FeatureCanvasEvent_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    jniJNI.FeatureCanvasEvent_change_ownership(this, swigCPtr, true);
  }

  private Object parentReference;

  protected static long getCPtrAndDisown(FeatureCanvasEvent obj) {
    if (obj != null)
    {
        obj.swigCMemOwn= false;
        obj.parentReference = null;
    }
    return getCPtr(obj);
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(Object reference) {
    parentReference = reference;
  }

  public boolean equals(Object obj) {
    boolean equal = false;
    if (obj instanceof FeatureCanvasEvent)
      equal = (((FeatureCanvasEvent)obj).swigCPtr == this.swigCPtr);
    return equal;
  }

  public int hashCode() {
     return (int)swigCPtr;
  }


  public FeatureCanvasEvent() {
    this(jniJNI.new_FeatureCanvasEvent(), true);
    jniJNI.FeatureCanvasEvent_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void FeatureSelected() {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_FeatureSelected(swigCPtr, this); else jniJNI.FeatureCanvasEvent_FeatureSelectedSwigExplicitFeatureCanvasEvent(swigCPtr, this);
  }

  public void FeatureDeSelected() {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_FeatureDeSelected(swigCPtr, this); else jniJNI.FeatureCanvasEvent_FeatureDeSelectedSwigExplicitFeatureCanvasEvent(swigCPtr, this);
  }

  public void FeatureInsert() {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_FeatureInsert(swigCPtr, this); else jniJNI.FeatureCanvasEvent_FeatureInsertSwigExplicitFeatureCanvasEvent(swigCPtr, this);
  }

  public void FeatureInserted(Feature poFeature) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_FeatureInserted(swigCPtr, this, Feature.getCPtr(poFeature), poFeature); else jniJNI.FeatureCanvasEvent_FeatureInsertedSwigExplicitFeatureCanvasEvent(swigCPtr, this, Feature.getCPtr(poFeature), poFeature);
  }

  public void FeatureDelete() {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_FeatureDelete(swigCPtr, this); else jniJNI.FeatureCanvasEvent_FeatureDeleteSwigExplicitFeatureCanvasEvent(swigCPtr, this);
  }

  public void FeatureDeleted(Feature poFeature) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_FeatureDeleted(swigCPtr, this, Feature.getCPtr(poFeature), poFeature); else jniJNI.FeatureCanvasEvent_FeatureDeletedSwigExplicitFeatureCanvasEvent(swigCPtr, this, Feature.getCPtr(poFeature), poFeature);
  }

  public void FeaturePreUpdate(Feature poFeature) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_FeaturePreUpdate(swigCPtr, this, Feature.getCPtr(poFeature), poFeature); else jniJNI.FeatureCanvasEvent_FeaturePreUpdateSwigExplicitFeatureCanvasEvent(swigCPtr, this, Feature.getCPtr(poFeature), poFeature);
  }

  public void FeatureUpdate(Feature poFeature) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_FeatureUpdate(swigCPtr, this, Feature.getCPtr(poFeature), poFeature); else jniJNI.FeatureCanvasEvent_FeatureUpdateSwigExplicitFeatureCanvasEvent(swigCPtr, this, Feature.getCPtr(poFeature), poFeature);
  }

  public void FeatureUpdated(Feature pofromFeature, Feature potoFeature) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_FeatureUpdated(swigCPtr, this, Feature.getCPtr(pofromFeature), pofromFeature, Feature.getCPtr(potoFeature), potoFeature); else jniJNI.FeatureCanvasEvent_FeatureUpdatedSwigExplicitFeatureCanvasEvent(swigCPtr, this, Feature.getCPtr(pofromFeature), pofromFeature, Feature.getCPtr(potoFeature), potoFeature);
  }

  public void PreCommit() {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_PreCommit(swigCPtr, this); else jniJNI.FeatureCanvasEvent_PreCommitSwigExplicitFeatureCanvasEvent(swigCPtr, this);
  }

  public void Committed() {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_Committed(swigCPtr, this); else jniJNI.FeatureCanvasEvent_CommittedSwigExplicitFeatureCanvasEvent(swigCPtr, this);
  }

  public void PreUndo() {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_PreUndo(swigCPtr, this); else jniJNI.FeatureCanvasEvent_PreUndoSwigExplicitFeatureCanvasEvent(swigCPtr, this);
  }

  public void Undid() {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_Undid(swigCPtr, this); else jniJNI.FeatureCanvasEvent_UndidSwigExplicitFeatureCanvasEvent(swigCPtr, this);
  }

  public void LayerAdded(FeatureLayer poFtLayer) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerAdded(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer); else jniJNI.FeatureCanvasEvent_LayerAddedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer);
  }

  public void LayerDelete(FeatureLayer poFtLayer) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerDelete(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer); else jniJNI.FeatureCanvasEvent_LayerDeleteSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer);
  }

  public void LayerDeleted() {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerDeleted(swigCPtr, this); else jniJNI.FeatureCanvasEvent_LayerDeletedSwigExplicitFeatureCanvasEvent(swigCPtr, this);
  }

  public void LayerOrderChanged(FeatureLayer poFtLayer) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerOrderChanged(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer); else jniJNI.FeatureCanvasEvent_LayerOrderChangedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer);
  }

  public void LayerVisibleChanged(FeatureLayer poFtLayer, boolean on) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerVisibleChanged(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer, on); else jniJNI.FeatureCanvasEvent_LayerVisibleChangedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer, on);
  }

  public void LayerSelectableChanged(FeatureLayer poFtLayer, boolean on) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerSelectableChanged(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer, on); else jniJNI.FeatureCanvasEvent_LayerSelectableChangedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer, on);
  }

  public void LayerEditableChanged(FeatureLayer poFtLayer, boolean on) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerEditableChanged(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer, on); else jniJNI.FeatureCanvasEvent_LayerEditableChangedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer, on);
  }

  public void LayerActivated(FeatureLayer poFtLayer) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerActivated(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer); else jniJNI.FeatureCanvasEvent_LayerActivatedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer);
  }

  public void LayerStyleChanged(FeatureLayer poFtLayer) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerStyleChanged(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer); else jniJNI.FeatureCanvasEvent_LayerStyleChangedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer);
  }

  public void LayerAnnotationChanged(FeatureLayer poFtLayer) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerAnnotationChanged(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer); else jniJNI.FeatureCanvasEvent_LayerAnnotationChangedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer);
  }

  public void LayerTypeStyleChanged(FeatureLayer poFtLayer) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerTypeStyleChanged(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer); else jniJNI.FeatureCanvasEvent_LayerTypeStyleChangedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer);
  }

  public void LayerExported(FeatureLayer poFtLayer) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerExported(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer); else jniJNI.FeatureCanvasEvent_LayerExportedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer);
  }

  public void LayerAttributeChange(FeatureLayer poFtLayer) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerAttributeChange(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer); else jniJNI.FeatureCanvasEvent_LayerAttributeChangeSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer);
  }

  public void LayerAttributeChanged(FeatureLayer poFtLayer) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerAttributeChanged(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer); else jniJNI.FeatureCanvasEvent_LayerAttributeChangedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer);
  }

  public void LayerDisplayNameChanged(FeatureLayer poFtLayer) {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_LayerDisplayNameChanged(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer); else jniJNI.FeatureCanvasEvent_LayerDisplayNameChangedSwigExplicitFeatureCanvasEvent(swigCPtr, this, FeatureLayer.getCPtr(poFtLayer), poFtLayer);
  }

  public void WorkspaceChanged() {
    if (getClass() == FeatureCanvasEvent.class) jniJNI.FeatureCanvasEvent_WorkspaceChanged(swigCPtr, this); else jniJNI.FeatureCanvasEvent_WorkspaceChangedSwigExplicitFeatureCanvasEvent(swigCPtr, this);
  }

}
