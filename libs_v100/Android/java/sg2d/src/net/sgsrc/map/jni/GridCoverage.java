/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sgsrc.map.jni;

public class GridCoverage extends Coverage {
  private long swigCPtr;

  protected GridCoverage(long cPtr, boolean cMemoryOwn) {
    super(jniJNI.GridCoverage_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GridCoverage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  private Object parentReference;

  protected static long getCPtrAndDisown(GridCoverage obj) {
    if (obj != null)
    {
        obj.swigCMemOwn= false;
        obj.parentReference = null;
    }
    return getCPtr(obj);
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(Object reference) {
    parentReference = reference;
  }

  public boolean equals(Object obj) {
    boolean equal = false;
    if (obj instanceof GridCoverage)
      equal = (((GridCoverage)obj).swigCPtr == this.swigCPtr);
    return equal;
  }

  public int hashCode() {
     return (int)swigCPtr;
  }


  public void Destroy() {
    jniJNI.GridCoverage_Destroy(swigCPtr, this);
  }

  public void Close() {
    jniJNI.GridCoverage_Close(swigCPtr, this);
  }

  public int GetNumSampleDimensions() {
    return jniJNI.GridCoverage_GetNumSampleDimensions(swigCPtr, this);
  }

  public SpatialReference GetCoordinateSystem() {
    long cPtr = jniJNI.GridCoverage_GetCoordinateSystem(swigCPtr, this);
    return (cPtr == 0) ? null : new SpatialReference(cPtr, false);
  }

  public Geometry GetEnvelope() {
    long cPtr = jniJNI.GridCoverage_GetEnvelope(swigCPtr, this);
    return (cPtr == 0) ? null : new Geometry(cPtr, false);
  }

  public void Extent2D(SWIGTYPE_p_double minx, SWIGTYPE_p_double miny, SWIGTYPE_p_double maxx, SWIGTYPE_p_double maxy) {
    jniJNI.GridCoverage_Extent2D(swigCPtr, this, SWIGTYPE_p_double.getCPtr(minx), SWIGTYPE_p_double.getCPtr(miny), SWIGTYPE_p_double.getCPtr(maxx), SWIGTYPE_p_double.getCPtr(maxy));
  }

  public GridSampleDimension GetSampleDimension(long index) {
    long cPtr = jniJNI.GridCoverage_GetSampleDimension(swigCPtr, this, index);
    return (cPtr == 0) ? null : new GridSampleDimension(cPtr, false);
  }

  public String GetDescription() {
    return jniJNI.GridCoverage_GetDescription(swigCPtr, this);
  }

  public void SetDescription(String desc) {
    jniJNI.GridCoverage_SetDescription(swigCPtr, this, desc);
  }

  public String GetMetadataValue(String meta) {
    return jniJNI.GridCoverage_GetMetadataValue(swigCPtr, this, meta);
  }

  public void SetMetadataValue(String domain, String value) {
    jniJNI.GridCoverage_SetMetadataValue(swigCPtr, this, domain, value);
  }

  public String GetMetadataItemValue(String name, String domain) {
    return jniJNI.GridCoverage_GetMetadataItemValue(swigCPtr, this, name, domain);
  }

  public void SetMetadataItemValue(String name, String domain, String value) {
    jniJNI.GridCoverage_SetMetadataItemValue(swigCPtr, this, name, domain, value);
  }

  public int GetNumRow() {
    return jniJNI.GridCoverage_GetNumRow(swigCPtr, this);
  }

  public int GetNumColumn() {
    return jniJNI.GridCoverage_GetNumColumn(swigCPtr, this);
  }

  public GridSampleDimension AddGridSampleDimension(int eType, String option) {
    long cPtr = jniJNI.GridCoverage_AddGridSampleDimension(swigCPtr, this, eType, option);
    return (cPtr == 0) ? null : new GridSampleDimension(cPtr, false);
  }

  public double GetPixelUnit() {
    return jniJNI.GridCoverage_GetPixelUnit(swigCPtr, this);
  }

  public double GetMinValue(int sampleDimension) {
    return jniJNI.GridCoverage_GetMinValue(swigCPtr, this, sampleDimension);
  }

  public double GetMaxValue(int sampleDimension) {
    return jniJNI.GridCoverage_GetMaxValue(swigCPtr, this, sampleDimension);
  }

  public double GetMeanValue(int sampleDimension) {
    return jniJNI.GridCoverage_GetMeanValue(swigCPtr, this, sampleDimension);
  }

  public double GetStandardDeviation(int sampleDimension) {
    return jniJNI.GridCoverage_GetStandardDeviation(swigCPtr, this, sampleDimension);
  }

  public double GetMedianValue(int sampleDimension) {
    return jniJNI.GridCoverage_GetMedianValue(swigCPtr, this, sampleDimension);
  }

  public double GetModeValue(int sampleDimension) {
    return jniJNI.GridCoverage_GetModeValue(swigCPtr, this, sampleDimension);
  }

  public Histogram GetHistogram(int sampleDimension, double minimumEntryValue, double maximumEntryValue, int numberEntries) {
    long cPtr = jniJNI.GridCoverage_GetHistogram(swigCPtr, this, sampleDimension, minimumEntryValue, maximumEntryValue, numberEntries);
    return (cPtr == 0) ? null : new Histogram(cPtr, false);
  }

  public int SetValueInBoundary(Geometry range, Parameters pParams) {
    return jniJNI.GridCoverage_SetValueInBoundary(swigCPtr, this, Geometry.getCPtr(range), range, Parameters.getCPtr(pParams), pParams);
  }

}
