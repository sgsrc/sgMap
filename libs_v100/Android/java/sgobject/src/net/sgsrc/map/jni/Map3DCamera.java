/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sgsrc.map.jni;

public class Map3DCamera {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Map3DCamera(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0)
        throw new RuntimeException();
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }
  
  public static long getCPtr(Map3DCamera obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  private Object parentReference;

  protected static long getCPtrAndDisown(Map3DCamera obj) {
    if (obj != null)
    {
        obj.swigCMemOwn= false;
        obj.parentReference = null;
    }
    return getCPtr(obj);
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(Object reference) {
    parentReference = reference;
  }

  public boolean equals(Object obj) {
    boolean equal = false;
    if (obj instanceof Map3DCamera)
      equal = (((Map3DCamera)obj).swigCPtr == this.swigCPtr);
    return equal;
  }

  public int hashCode() {
     return (int)swigCPtr;
  }


  public void SetViewpoint(double ViewX, double ViewY, double ViewZ, double heading, double pitch, double range, double duration_s) {
    jniJNI.Map3DCamera_SetViewpoint(swigCPtr, this, ViewX, ViewY, ViewZ, heading, pitch, range, duration_s);
  }

  public void GetViewpoint(SWIGTYPE_p_double x_or_lon, SWIGTYPE_p_double y_or_lat, double[] z, SWIGTYPE_p_double heading_deg, SWIGTYPE_p_double pitch_deg, SWIGTYPE_p_double range) {
    jniJNI.Map3DCamera_GetViewpoint(swigCPtr, this, SWIGTYPE_p_double.getCPtr(x_or_lon), SWIGTYPE_p_double.getCPtr(y_or_lat), z, SWIGTYPE_p_double.getCPtr(heading_deg), SWIGTYPE_p_double.getCPtr(pitch_deg), SWIGTYPE_p_double.getCPtr(range));
  }

  public void SetDefaultViewpoint(double x_or_lon, double y_or_lat, double z, double heading_deg, double pitch_deg, double range) {
    jniJNI.Map3DCamera_SetDefaultViewpoint(swigCPtr, this, x_or_lon, y_or_lat, z, heading_deg, pitch_deg, range);
  }

  public void GetDefaultViewpoint(SWIGTYPE_p_double x_or_lon, SWIGTYPE_p_double y_or_lat, double[] z, SWIGTYPE_p_double heading_deg, SWIGTYPE_p_double pitch_deg, SWIGTYPE_p_double range) {
    jniJNI.Map3DCamera_GetDefaultViewpoint(swigCPtr, this, SWIGTYPE_p_double.getCPtr(x_or_lon), SWIGTYPE_p_double.getCPtr(y_or_lat), z, SWIGTYPE_p_double.getCPtr(heading_deg), SWIGTYPE_p_double.getCPtr(pitch_deg), SWIGTYPE_p_double.getCPtr(range));
  }

  public void MoveFromGeo(double lon, double lat, int nViewOption, double dDist) {
    jniJNI.Map3DCamera_MoveFromGeo(swigCPtr, this, lon, lat, nViewOption, dDist);
  }

  public int GetCenter(SWIGTYPE_p_double dLon, SWIGTYPE_p_double dLat) {
    return jniJNI.Map3DCamera_GetCenter(swigCPtr, this, SWIGTYPE_p_double.getCPtr(dLon), SWIGTYPE_p_double.getCPtr(dLat));
  }

  public double GetCenterX() {
    return jniJNI.Map3DCamera_GetCenterX(swigCPtr, this);
  }

  public double GetCenterY() {
    return jniJNI.Map3DCamera_GetCenterY(swigCPtr, this);
  }

  public void ZoomAll() {
    jniJNI.Map3DCamera_ZoomAll(swigCPtr, this);
  }

  public void ZoomIn() {
    jniJNI.Map3DCamera_ZoomIn(swigCPtr, this);
  }

  public void ZoomOut() {
    jniJNI.Map3DCamera_ZoomOut(swigCPtr, this);
  }

  public void ZoomInEx(double dVal) {
    jniJNI.Map3DCamera_ZoomInEx(swigCPtr, this, dVal);
  }

  public void ZoomOutEx(double dVal) {
    jniJNI.Map3DCamera_ZoomOutEx(swigCPtr, this, dVal);
  }

  public void SetMinMaxPitch(int min, int max) {
    jniJNI.Map3DCamera_SetMinMaxPitch(swigCPtr, this, min, max);
  }

  public void Turn(double deg_head, double deg_pitch) {
    jniJNI.Map3DCamera_Turn(swigCPtr, this, deg_head, deg_pitch);
  }

  public void GetMinMaxPitch(SWIGTYPE_p_int min, SWIGTYPE_p_int max) {
    jniJNI.Map3DCamera_GetMinMaxPitch(swigCPtr, this, SWIGTYPE_p_int.getCPtr(min), SWIGTYPE_p_int.getCPtr(max));
  }

}
