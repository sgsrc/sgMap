/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sgsrc.map.jni;

public class Chart extends UserDefinedWidget {
  private long swigCPtr;

  protected Chart(long cPtr, boolean cMemoryOwn) {
    super(jniJNI.Chart_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Chart obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  private Object parentReference;

  protected static long getCPtrAndDisown(Chart obj) {
    if (obj != null)
    {
        obj.swigCMemOwn= false;
        obj.parentReference = null;
    }
    return getCPtr(obj);
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(Object reference) {
    parentReference = reference;
  }

  public boolean equals(Object obj) {
    boolean equal = false;
    if (obj instanceof Chart)
      equal = (((Chart)obj).swigCPtr == this.swigCPtr);
    return equal;
  }

  public int hashCode() {
     return (int)swigCPtr;
  }


  public void SetTransparent(int val) {
    jniJNI.Chart_SetTransparent(swigCPtr, this, val);
  }

  public int GetTransparent() {
    return jniJNI.Chart_GetTransparent(swigCPtr, this);
  }

  public void SetChartType(int eType) {
    jniJNI.Chart_SetChartType(swigCPtr, this, eType);
  }

  public int GetChartType() {
    return jniJNI.Chart_GetChartType(swigCPtr, this);
  }

  public int IsEqual(Chart other) {
    return jniJNI.Chart_IsEqual(swigCPtr, this, Chart.getCPtr(other), other);
  }

  public void InitDataset(int nNumDataSeries, int nNumAttributes) {
    jniJNI.Chart_InitDataset(swigCPtr, this, nNumDataSeries, nNumAttributes);
  }

  public int GetNumDataSeries() {
    return jniJNI.Chart_GetNumDataSeries(swigCPtr, this);
  }

  public int GetNumDataPerSeries() {
    return jniJNI.Chart_GetNumDataPerSeries(swigCPtr, this);
  }

  public void SetLineColor(long color) {
    jniJNI.Chart_SetLineColor(swigCPtr, this, color);
  }

  public int GetLineColor() {
    return jniJNI.Chart_GetLineColor(swigCPtr, this);
  }

  public void SetBackgroundColor(long color) {
    jniJNI.Chart_SetBackgroundColor(swigCPtr, this, color);
  }

  public int GetBackgroundColor() {
    return jniJNI.Chart_GetBackgroundColor(swigCPtr, this);
  }

  public void SetDataSeries(int index, SWIGTYPE_p_double pfValues, String pszLabels, String pszColors) {
    jniJNI.Chart_SetDataSeries(swigCPtr, this, index, SWIGTYPE_p_double.getCPtr(pfValues), pszLabels, pszColors);
  }

  public String GetFeatureFields() {
    return jniJNI.Chart_GetFeatureFields(swigCPtr, this);
  }

  public void SetFeatureFields(String pszFields) {
    jniJNI.Chart_SetFeatureFields(swigCPtr, this, pszFields);
  }

  public String GetFeatureLables() {
    return jniJNI.Chart_GetFeatureLables(swigCPtr, this);
  }

  public void SetFeatureLables(String pszLabels) {
    jniJNI.Chart_SetFeatureLables(swigCPtr, this, pszLabels);
  }

  public void SetFeatureColors(String pszColors) {
    jniJNI.Chart_SetFeatureColors(swigCPtr, this, pszColors);
  }

  public String GetFeatureColors() {
    return jniJNI.Chart_GetFeatureColors(swigCPtr, this);
  }

  public void SetParameter(Parameter param) {
    jniJNI.Chart_SetParameter(swigCPtr, this, Parameter.getCPtr(param), param);
  }

}
