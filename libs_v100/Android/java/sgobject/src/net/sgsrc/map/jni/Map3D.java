/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sgsrc.map.jni;

public class Map3D extends Canvas {
  private long swigCPtr;

  protected Map3D(long cPtr, boolean cMemoryOwn) {
    super(jniJNI.Map3D_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Map3D obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  private Object parentReference;

  protected static long getCPtrAndDisown(Map3D obj) {
    if (obj != null)
    {
        obj.swigCMemOwn= false;
        obj.parentReference = null;
    }
    return getCPtr(obj);
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(Object reference) {
    parentReference = reference;
  }

  public boolean equals(Object obj) {
    boolean equal = false;
    if (obj instanceof Map3D)
      equal = (((Map3D)obj).swigCPtr == this.swigCPtr);
    return equal;
  }

  public int hashCode() {
     return (int)swigCPtr;
  }


  public void Initialize(int handle) {
    jniJNI.Map3D_Initialize(swigCPtr, this, handle);
  }

  public void ReSize(int x, int y, int width, int height) {
    jniJNI.Map3D_ReSize(swigCPtr, this, x, y, width, height);
  }

  public void Draw() {
    jniJNI.Map3D_Draw(swigCPtr, this);
  }

  public void SetFeatureCanvas(FeatureCanvas h) {
    jniJNI.Map3D_SetFeatureCanvas(swigCPtr, this, FeatureCanvas.getCPtr(h), h);
  }

  public void SetScreenMode(int h) {
    jniJNI.Map3D_SetScreenMode(swigCPtr, this, h);
  }

  public int GetScreenMode() {
    return jniJNI.Map3D_GetScreenMode(swigCPtr, this);
  }

  public void SetSightMode(int h) {
    jniJNI.Map3D_SetSightMode(swigCPtr, this, h);
  }

  public int GetSightMode() {
    return jniJNI.Map3D_GetSightMode(swigCPtr, this);
  }

  public void MouseButtonDown(float x, float y, int button) {
    jniJNI.Map3D_MouseButtonDown(swigCPtr, this, x, y, button);
  }

  public void MouseButtonUp(float x, float y, int button) {
    jniJNI.Map3D_MouseButtonUp(swigCPtr, this, x, y, button);
  }

  public void MouseMove(float x, float y) {
    jniJNI.Map3D_MouseMove(swigCPtr, this, x, y);
  }

  public void TouchBegan(int touchid, float x, float y) {
    jniJNI.Map3D_TouchBegan(swigCPtr, this, touchid, x, y);
  }

  public void TouchMoved(int touchid, float x, float y) {
    jniJNI.Map3D_TouchMoved(swigCPtr, this, touchid, x, y);
  }

  public void TouchEnded(int touchid, float x, float y, int tapcount) {
    jniJNI.Map3D_TouchEnded(swigCPtr, this, touchid, x, y, tapcount);
  }

  public void KeyDown(int key) {
    jniJNI.Map3D_KeyDown(swigCPtr, this, key);
  }

  public void KeyUp(int key) {
    jniJNI.Map3D_KeyUp(swigCPtr, this, key);
  }

  public Map3DCamera GetMap3DCamera() {
    long cPtr = jniJNI.Map3D_GetMap3DCamera(swigCPtr, this);
    return (cPtr == 0) ? null : new Map3DCamera(cPtr, false);
  }

  public Map3DLight GetMap3DLight() {
    long cPtr = jniJNI.Map3D_GetMap3DLight(swigCPtr, this);
    return (cPtr == 0) ? null : new Map3DLight(cPtr, false);
  }

  public void Invalidate() {
    jniJNI.Map3D_Invalidate(swigCPtr, this);
  }

  public void SetBackColor(int rgb) {
    jniJNI.Map3D_SetBackColor(swigCPtr, this, rgb);
  }

  public int GetBackColor() {
    return jniJNI.Map3D_GetBackColor(swigCPtr, this);
  }

  public void ZoomToFeatureCollection(FeatureCollection poFtCol) {
    jniJNI.Map3D_ZoomToFeatureCollection(swigCPtr, this, FeatureCollection.getCPtr(poFtCol), poFtCol);
  }

  public int AddPOIFromMemory(String szIconName, double dLat, double dLon, String szTitle) {
    return jniJNI.Map3D_AddPOIFromMemory(swigCPtr, this, szIconName, dLat, dLon, szTitle);
  }

  public int RemoveAllPOIFromMemory() {
    return jniJNI.Map3D_RemoveAllPOIFromMemory(swigCPtr, this);
  }

  public int SetHomePosition(double dlon, double dlat, double dpitch_deg, double drange, double dduration_s) {
    return jniJNI.Map3D_SetHomePosition(swigCPtr, this, dlon, dlat, dpitch_deg, drange, dduration_s);
  }

  public int ZoomHomePosition(double minX, double minY, double maxX, double maxY, double dduration_s) {
    return jniJNI.Map3D_ZoomHomePosition(swigCPtr, this, minX, minY, maxX, maxY, dduration_s);
  }

  public void ZoomRect(double minX, double minY, double maxX, double maxY) {
    jniJNI.Map3D_ZoomRect(swigCPtr, this, minX, minY, maxX, maxY);
  }

  public void AddControl(long id, UserDefinedWidget pUDBox) {
    jniJNI.Map3D_AddControl(swigCPtr, this, id, UserDefinedWidget.getCPtr(pUDBox), pUDBox);
  }

  public void RemoveControl(long id) {
    jniJNI.Map3D_RemoveControl(swigCPtr, this, id);
  }

  public void RemoveAllControl() {
    jniJNI.Map3D_RemoveAllControl(swigCPtr, this);
  }

}
