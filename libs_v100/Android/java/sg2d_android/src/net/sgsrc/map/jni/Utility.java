/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sgsrc.map.jni;

public class Utility {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Utility(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0)
        throw new RuntimeException();
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }
  
  public static long getCPtr(Utility obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  private Object parentReference;

  protected static long getCPtrAndDisown(Utility obj) {
    if (obj != null)
    {
        obj.swigCMemOwn= false;
        obj.parentReference = null;
    }
    return getCPtr(obj);
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(Object reference) {
    parentReference = reference;
  }

  public boolean equals(Object obj) {
    boolean equal = false;
    if (obj instanceof Utility)
      equal = (((Utility)obj).swigCPtr == this.swigCPtr);
    return equal;
  }

  public int hashCode() {
     return (int)swigCPtr;
  }


  public void Destroy() {
    jniJNI.Utility_Destroy(swigCPtr, this);
  }

  public Geometry ProjectMGRSToPoint(String pszCoord, SpatialReference oTgtSRS) {
    long cPtr = jniJNI.Utility_ProjectMGRSToPoint(swigCPtr, this, pszCoord, SpatialReference.getCPtr(oTgtSRS), oTgtSRS);
    return (cPtr == 0) ? null : new Geometry(cPtr, false);
  }

  public String ProjectMGRSToString(Geometry oSrcPoi, SpatialReference oSrcSRS) {
    return jniJNI.Utility_ProjectMGRSToString(swigCPtr, this, Geometry.getCPtr(oSrcPoi), oSrcPoi, SpatialReference.getCPtr(oSrcSRS), oSrcSRS);
  }

  public String ProjectWorldMapPoint(SpatialReference oSrcSRS, double x, double y, int nLevel) {
    return jniJNI.Utility_ProjectWorldMapPoint(swigCPtr, this, SpatialReference.getCPtr(oSrcSRS), oSrcSRS, x, y, nLevel);
  }

  public Geometry WorldMapBoundingBox(SpatialReference poTgtSRS, int nLevel, String pszMapName) {
    long cPtr = jniJNI.Utility_WorldMapBoundingBox(swigCPtr, this, SpatialReference.getCPtr(poTgtSRS), poTgtSRS, nLevel, pszMapName);
    return (cPtr == 0) ? null : new Geometry(cPtr, false);
  }

  public boolean ProjectFromCRS(SWIGTYPE_p_double x, SWIGTYPE_p_double y, SpatialReference poSrsSRS, SpatialReference poTgtSRS) {
    return jniJNI.Utility_ProjectFromCRS(swigCPtr, this, SWIGTYPE_p_double.getCPtr(x), SWIGTYPE_p_double.getCPtr(y), SpatialReference.getCPtr(poSrsSRS), poSrsSRS, SpatialReference.getCPtr(poTgtSRS), poTgtSRS);
  }

  public boolean ProjectFromText(SWIGTYPE_p_double x, SWIGTYPE_p_double y, String pszSrsSRS, String pszTgtSRS) {
    return jniJNI.Utility_ProjectFromText(swigCPtr, this, SWIGTYPE_p_double.getCPtr(x), SWIGTYPE_p_double.getCPtr(y), pszSrsSRS, pszTgtSRS);
  }

  public String GetModuleFilePath() {
    return jniJNI.Utility_GetModuleFilePath(swigCPtr, this);
  }

  public boolean Compression(String pszSrcFile, String pszZipFile) {
    return jniJNI.Utility_Compression(swigCPtr, this, pszSrcFile, pszZipFile);
  }

  public boolean Decompression(String pszZipFile, String pszOutPath) {
    return jniJNI.Utility_Decompression(swigCPtr, this, pszZipFile, pszOutPath);
  }

  public boolean IsConfigured() {
    return jniJNI.Utility_IsConfigured(swigCPtr, this);
  }

  public void SetConfigured(boolean bVal) {
    jniJNI.Utility_SetConfigured(swigCPtr, this, bVal);
  }

  public double GetSurfaceVolumeFromGridCoverage(GridCoverage grid, Geometry range, int eType, double base_z, double z_factor, int pyramid_level_resolution, Parameters pParams) {
    return jniJNI.Utility_GetSurfaceVolumeFromGridCoverage(swigCPtr, this, GridCoverage.getCPtr(grid), grid, Geometry.getCPtr(range), range, eType, base_z, z_factor, pyramid_level_resolution, Parameters.getCPtr(pParams), pParams);
  }

  public void ShowUpdater() {
    jniJNI.Utility_ShowUpdater(swigCPtr, this);
  }

  public String GetVersion() {
    return jniJNI.Utility_GetVersion(swigCPtr, this);
  }

  public String GetMyMacAddress() {
    return jniJNI.Utility_GetMyMacAddress(swigCPtr, this);
  }

  public String GetMyIPAddress() {
    return jniJNI.Utility_GetMyIPAddress(swigCPtr, this);
  }

  public double CalculateDistanceFromLL(double x1, double y1, double x2, double y2) {
    return jniJNI.Utility_CalculateDistanceFromLL(swigCPtr, this, x1, y1, x2, y2);
  }

  public double CalculateMeterUnitFromLL(double x, double y, boolean bHoriz) {
    return jniJNI.Utility_CalculateMeterUnitFromLL(swigCPtr, this, x, y, bHoriz);
  }

  public String GetLastErrorMsg() {
    return jniJNI.Utility_GetLastErrorMsg(swigCPtr, this);
  }

  public String StringToUnicode(String pszVal) {
    return jniJNI.Utility_StringToUnicode(swigCPtr, this, pszVal);
  }

  public String StringToUTF8(String pszVal) {
    return jniJNI.Utility_StringToUTF8(swigCPtr, this, pszVal);
  }

  public String GetEncoding() {
    return jniJNI.Utility_GetEncoding(swigCPtr, this);
  }

  public void SetEncoding(String pszVal) {
    jniJNI.Utility_SetEncoding(swigCPtr, this, pszVal);
  }

  public void SetDebug(boolean bVal) {
    jniJNI.Utility_SetDebug(swigCPtr, this, bVal);
  }

  public int GetMap2DKeyFromWinKey(int nChar) {
    return jniJNI.Utility_GetMap2DKeyFromWinKey(swigCPtr, this, nChar);
  }

  public int GetMap3DKeyFromQtKey(int nChar) {
    return jniJNI.Utility_GetMap3DKeyFromQtKey(swigCPtr, this, nChar);
  }

  public String GetConfigOption(String pszKey) {
    return jniJNI.Utility_GetConfigOption(swigCPtr, this, pszKey);
  }

  public void SetConfigOption(String pszKey, String pszValue) {
    jniJNI.Utility_SetConfigOption(swigCPtr, this, pszKey, pszValue);
  }

  public String GetHttpResult(String pszValue, String pszOption) {
    return jniJNI.Utility_GetHttpResult(swigCPtr, this, pszValue, pszOption);
  }

  public String GetURLEncoded(String strValue) {
    return jniJNI.Utility_GetURLEncoded(swigCPtr, this, strValue);
  }

  public String GetDirectory(String strPath, String strSep) {
    return jniJNI.Utility_GetDirectory(swigCPtr, this, strPath, strSep);
  }

  public int Download(String pszOrgSvrFile, String pszLocalFile) {
    return jniJNI.Utility_Download(swigCPtr, this, pszOrgSvrFile, pszLocalFile);
  }

  public int Upload(String pszOrgLocalFile, String pszSvrFile) {
    return jniJNI.Utility_Upload(swigCPtr, this, pszOrgLocalFile, pszSvrFile);
  }

}
