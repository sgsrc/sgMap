/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sgsrc.map.jni;

import net.joymap.jni.SpatialReference;

public class jni implements jniConstants {
  public static void UseExceptions() {
    jniJNI.UseExceptions();
  }

  public static void DontUseExceptions() {
    jniJNI.DontUseExceptions();
  }



    /* Uninstanciable class */
    private jni()
    {
    }

  public static String GetWellKnownGeogCSAsWKT(String name) {
    return jniJNI.GetWellKnownGeogCSAsWKT__SWIG_0(name);
  }

  public static String GetUserInputAsWKT(String name) {
    return jniJNI.GetUserInputAsWKT__SWIG_0(name);
  }

  public static int GetWellKnownGeogCSAsWKT(String name, String[] argout) {
    return jniJNI.GetWellKnownGeogCSAsWKT__SWIG_1(name, argout);
  }

  public static int GetUserInputAsWKT(String name, String[] argout) {
    return jniJNI.GetUserInputAsWKT__SWIG_1(name, argout);
  }

  public static Geometry CreateGeometryFromWkb(byte[] nLen, SpatialReference reference) {
    long cPtr = jniJNI.CreateGeometryFromWkb__SWIG_0(nLen, SpatialReference.getCPtr(reference), reference);
    return (cPtr == 0) ? null : new Geometry(cPtr, true);
  }

  public static Geometry CreateGeometryFromWkb(byte[] nLen) {
    long cPtr = jniJNI.CreateGeometryFromWkb__SWIG_1(nLen);
    return (cPtr == 0) ? null : new Geometry(cPtr, true);
  }

  public static Geometry CreateGeometryFromWkt(String val, SpatialReference reference) {
    long cPtr = jniJNI.CreateGeometryFromWkt__SWIG_0(val, SpatialReference.getCPtr(reference), reference);
    return (cPtr == 0) ? null : new Geometry(cPtr, true);
  }

  public static Geometry CreateGeometryFromWkt(String val) {
    long cPtr = jniJNI.CreateGeometryFromWkt__SWIG_1(val);
    return (cPtr == 0) ? null : new Geometry(cPtr, true);
  }

  public static Geometry CreateGeometryFromGML(String input_string) {
    long cPtr = jniJNI.CreateGeometryFromGML(input_string);
    return (cPtr == 0) ? null : new Geometry(cPtr, true);
  }

  public static Geometry ApproximateArcAngles(double dfCenterX, double dfCenterY, double dfZ, double dfPrimaryRadius, double dfSecondaryAxis, double dfRotation, double dfStartAngle, double dfEndAngle, double dfMaxAngleStepSizeDegrees) {
    long cPtr = jniJNI.ApproximateArcAngles(dfCenterX, dfCenterY, dfZ, dfPrimaryRadius, dfSecondaryAxis, dfRotation, dfStartAngle, dfEndAngle, dfMaxAngleStepSizeDegrees);
    return (cPtr == 0) ? null : new Geometry(cPtr, true);
  }

  public static Geometry ForceToPolygon(Geometry geom_in) {
    long cPtr = jniJNI.ForceToPolygon(Geometry.getCPtr(geom_in), geom_in);
    return (cPtr == 0) ? null : new Geometry(cPtr, true);
  }

  public static Geometry ForceToMultiPolygon(Geometry geom_in) {
    long cPtr = jniJNI.ForceToMultiPolygon(Geometry.getCPtr(geom_in), geom_in);
    return (cPtr == 0) ? null : new Geometry(cPtr, true);
  }

  public static Geometry ForceToMultiPoint(Geometry geom_in) {
    long cPtr = jniJNI.ForceToMultiPoint(Geometry.getCPtr(geom_in), geom_in);
    return (cPtr == 0) ? null : new Geometry(cPtr, true);
  }

  public static Geometry ForceToMultiLineString(Geometry geom_in) {
    long cPtr = jniJNI.ForceToMultiLineString(Geometry.getCPtr(geom_in), geom_in);
    return (cPtr == 0) ? null : new Geometry(cPtr, true);
  }

  public static int GetDriverCount() {
    return jniJNI.GetDriverCount();
  }

}
