/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sgsrc.map.jni;

public class DisplayFactory {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected DisplayFactory(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0)
        throw new RuntimeException();
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }
  
  public static long getCPtr(DisplayFactory obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  private Object parentReference;

  protected static long getCPtrAndDisown(DisplayFactory obj) {
    if (obj != null)
    {
        obj.swigCMemOwn= false;
        obj.parentReference = null;
    }
    return getCPtr(obj);
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(Object reference) {
    parentReference = reference;
  }

  public boolean equals(Object obj) {
    boolean equal = false;
    if (obj instanceof DisplayFactory)
      equal = (((DisplayFactory)obj).swigCPtr == this.swigCPtr);
    return equal;
  }

  public int hashCode() {
     return (int)swigCPtr;
  }


  public void Initialize() {
    jniJNI.DisplayFactory_Initialize(swigCPtr, this);
  }

  public Canvas CreateCanvas(String h) {
    long cPtr = jniJNI.DisplayFactory_CreateCanvas(swigCPtr, this, h);
    return (cPtr == 0) ? null : new Canvas(cPtr, false);
  }

  public Map2D CreateCanvasToMap2D(String h) {
    long cPtr = jniJNI.DisplayFactory_CreateCanvasToMap2D(swigCPtr, this, h);
    return (cPtr == 0) ? null : new Map2D(cPtr, false);
  }

  public GraphicCanvas CreateCanvasToGraphicCanvas(String h) {
    long cPtr = jniJNI.DisplayFactory_CreateCanvasToGraphicCanvas(swigCPtr, this, h);
    return (cPtr == 0) ? null : new GraphicCanvas(cPtr, false);
  }

  public FeatureCanvas CreateFeatureCanvas() {
    long cPtr = jniJNI.DisplayFactory_CreateFeatureCanvas(swigCPtr, this);
    return (cPtr == 0) ? null : new FeatureCanvas(cPtr, false);
  }

  public Graphic CreateGraphic(String h) {
    long cPtr = jniJNI.DisplayFactory_CreateGraphic(swigCPtr, this, h);
    return (cPtr == 0) ? null : new Graphic(cPtr, false);
  }

  public GraphicLabel CreateGraphicLabel() {
    long cPtr = jniJNI.DisplayFactory_CreateGraphicLabel(swigCPtr, this);
    return (cPtr == 0) ? null : new GraphicLabel(cPtr, false);
  }

  public GraphicLineString CreateGraphicLineString() {
    long cPtr = jniJNI.DisplayFactory_CreateGraphicLineString(swigCPtr, this);
    return (cPtr == 0) ? null : new GraphicLineString(cPtr, false);
  }

  public GraphicPolygon CreateGraphicPolygon() {
    long cPtr = jniJNI.DisplayFactory_CreateGraphicPolygon(swigCPtr, this);
    return (cPtr == 0) ? null : new GraphicPolygon(cPtr, false);
  }

  public GraphicScaledImage CreateGraphicScaledImage() {
    long cPtr = jniJNI.DisplayFactory_CreateGraphicScaledImage(swigCPtr, this);
    return (cPtr == 0) ? null : new GraphicScaledImage(cPtr, false);
  }

  public GraphicArc CreateGraphicArc() {
    long cPtr = jniJNI.DisplayFactory_CreateGraphicArc(swigCPtr, this);
    return (cPtr == 0) ? null : new GraphicArc(cPtr, false);
  }

  public GraphicIcon CreateGraphicIcon() {
    long cPtr = jniJNI.DisplayFactory_CreateGraphicIcon(swigCPtr, this);
    return (cPtr == 0) ? null : new GraphicIcon(cPtr, false);
  }

  public GraphicRectangle CreateGraphicRectangle() {
    long cPtr = jniJNI.DisplayFactory_CreateGraphicRectangle(swigCPtr, this);
    return (cPtr == 0) ? null : new GraphicRectangle(cPtr, false);
  }

  public AggregateGraphic CreateAggregateGraphic() {
    long cPtr = jniJNI.DisplayFactory_CreateAggregateGraphic(swigCPtr, this);
    return (cPtr == 0) ? null : new AggregateGraphic(cPtr, false);
  }

  public Graphic CreateGraphicFromFeature(Feature ft, Canvas canvas) {
    long cPtr = jniJNI.DisplayFactory_CreateGraphicFromFeature(swigCPtr, this, Feature.getCPtr(ft), ft, Canvas.getCPtr(canvas), canvas);
    return (cPtr == 0) ? null : new Graphic(cPtr, false);
  }

  public Graphic CreateGraphicFromGeometry(Geometry geom, Canvas canvas) {
    long cPtr = jniJNI.DisplayFactory_CreateGraphicFromGeometry(swigCPtr, this, Geometry.getCPtr(geom), geom, Canvas.getCPtr(canvas), canvas);
    return (cPtr == 0) ? null : new Graphic(cPtr, false);
  }

}
