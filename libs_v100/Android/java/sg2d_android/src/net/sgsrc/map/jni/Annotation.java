/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sgsrc.map.jni;

public class Annotation {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Annotation(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0)
        throw new RuntimeException();
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }
  
  public static long getCPtr(Annotation obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  private Object parentReference;

  protected static long getCPtrAndDisown(Annotation obj) {
    if (obj != null)
    {
        obj.swigCMemOwn= false;
        obj.parentReference = null;
    }
    return getCPtr(obj);
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(Object reference) {
    parentReference = reference;
  }

  public boolean equals(Object obj) {
    boolean equal = false;
    if (obj instanceof Annotation)
      equal = (((Annotation)obj).swigCPtr == this.swigCPtr);
    return equal;
  }

  public int hashCode() {
     return (int)swigCPtr;
  }


  public Feature GetFeature() {
    long cPtr = jniJNI.Annotation_GetFeature(swigCPtr, this);
    return (cPtr == 0) ? null : new Feature(cPtr, false);
  }

  public void SetFeature(Feature feature) {
    jniJNI.Annotation_SetFeature(swigCPtr, this, Feature.getCPtr(feature), feature);
  }

  public long GetSize() {
    return jniJNI.Annotation_GetSize(swigCPtr, this);
  }

  public AnnotationLabel GetLabel(int index) {
    long cPtr = jniJNI.Annotation_GetLabel(swigCPtr, this, index);
    return (cPtr == 0) ? null : new AnnotationLabel(cPtr, false);
  }

  public void Add(AnnotationLabel label) {
    jniJNI.Annotation_Add(swigCPtr, this, AnnotationLabel.getCPtr(label), label);
  }

  public boolean Remove(AnnotationLabel label) {
    return jniJNI.Annotation_Remove(swigCPtr, this, AnnotationLabel.getCPtr(label), label);
  }

  public int RemoveAll() {
    return jniJNI.Annotation_RemoveAll(swigCPtr, this);
  }

  public void Sort() {
    jniJNI.Annotation_Sort(swigCPtr, this);
  }

}
